<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.maplerabbit.rlg.module.file.mapper.FileMapper">
    <select id="queryBySha512AndSize" resultMap="BaseResultMap">
        select
            <include refid="BaseQueryColumns" />
        from file
        <where>
            sha512 = #{sha512} and size = #{size}
        </where>
    </select>

    <!-- ========== Base CRUD ========== -->
    <sql id="BaseColumns">
        uuid, user_uuid, sha512, type, size, upload_time
    </sql>
    <sql id="BaseQueryColumns">
        uuid, user_uuid, sha512, type, size, upload_time, create_time, modified_time
    </sql>
    <sql id="save">
        #{uuid}, #{userUuid}, #{sha512}, #{type}, #{size}, #{uploadTime}
    </sql>
    <sql id="saveBatch">
        #{i.uuid}, #{i.userUuid}, #{i.sha512}, #{i.type}, #{i.size}, #{i.uploadTime}
    </sql>

    <sql id="BaseCount">
        select count(*) from file
    </sql>

    <resultMap id="BaseResultMap" type="cn.maplerabbit.rlg.pojo.file.entity.File">
        <id column="uuid" property="uuid" />
        <result column="user_uuid" property="userUuid" />
        <result column="sha512" property="sha512" />
        <result column="type" property="type" />
        <result column="size" property="size" />
        <result column="upload_time" property="uploadTime" />
        <result column="create_time" property="createTime" />
        <result column="modified_time" property="modifiedTime" />
    </resultMap>

    <insert id="save">
        insert into file(
            <include refid="BaseColumns" />
        ) values (
            <include refid="save" />
        )
    </insert>

    <insert id="saveBatch">
        insert into file(
            <include refid="BaseColumns" />
        ) values
        <foreach collection="list" item="i" separator=", ">
            (<include refid="saveBatch" />)
        </foreach>
    </insert>

    <delete id="remove">
        delete from file where uuid = #{pk}
    </delete>

    <delete id="removeBatch">
        delete from file where uuid in
        <foreach collection="list" item="pk" open="(" close=")" separator=", ">#{pk}</foreach>
    </delete>

    <update id="update">
        update file
        <set>
            <if test="userUuid != null">user_uuid = #{userUuid},</if>
            <if test="sha512 != null">sha512 = #{sha512},</if>
            <if test="type != null">type = #{type},</if>
            <if test="size != null">size = #{size},</if>
            <if test="uploadTime != null">upload_time = #{uploadTime},</if>
        </set>
        <where>
            uuid = #{uuid}
        </where>
    </update>

    <select id="query" resultMap="BaseResultMap">
        select
            <include refid="BaseQueryColumns" />
        from file
        <where>
            uuid = #{pk}
        </where>
    </select>

    <select id="queryBatch" resultMap="BaseResultMap">
        select
            <include refid="BaseQueryColumns" />
        from file
        <where>
            uuid in
            <foreach collection="list" item="pk" open="(" close=")" separator=", ">#{pk}</foreach>
        </where>
    </select>

    <select id="count" resultType="int">
        <include refid="BaseCount" />
    </select>
</mapper>